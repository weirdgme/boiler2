---
- name: Configure HAProxy
  hosts: haproxy
  become: true
  tasks:
    - name: Install HAProxy
      apt:
        name: haproxy
        state: present

    - name: Copy HAProxy configuration
      copy:
        src: haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg
      notify: Restart HAProxy

  handlers:
    - name: Restart HAProxy
      systemd:
        name: haproxy
        state: restarted

- name: Install K3s Cluster
  hosts: all
  become: true
  tasks:
    - name: Create config directory
      file:
        path: /etc/rancher/k3s
        state: directory

    - name: Create token file
      copy:
        content: "supersecrettoken"
        dest: /etc/rancher/k3s/cluster-token

    - name: Create kubelet configuration file
      copy:
        content: |
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          shutdownGracePeriod: 30s
          shutdownGracePeriodCriticalPods: 10s
        dest: /etc/rancher/k3s/kubelet.config

    - name: Create K3s config file
      copy:
        content: |
          token-file: /etc/rancher/k3s/cluster-token
          disable:
          - local-storage
          - servicelb
          - traefik
          etcd-expose-metrics: true
          kube-controller-manager-arg:
          - bind-address=0.0.0.0
          - terminated-pod-gc-threshold=10
          kube-proxy-arg:
          - metrics-bind-address=0.0.0.0
          kube-scheduler-arg:
          - bind-address=0.0.0.0
          kubelet-arg:
          - config=/etc/rancher/k3s/kubelet.config
          node-taint:
          - node-role.kubernetes.io/master=true:NoSchedule
          tls-san:
          - "{{ k3s_api_loadbalancer_ip }}"
          write-kubeconfig-mode: 644
        dest: /etc/rancher/k3s/config.yaml

    - name: Install primary master node
      shell: "curl -sfL https://get.k3s.io | sh -s - server --cluster-init"
      when: inventory_hostname == 'kube-1.home'

    - name: Install secondary master nodes
      shell: "curl -sfL https://get.k3s.io | sh -s - server --server https://{{ k3s_api_loadbalancer_ip }}:6443"
      when: inventory_hostname in groups['master'] and inventory_hostname != 'kube-1.home'

    - name: Install worker nodes
      shell: "curl -sfL https://get.k3s.io | sh -s - agent --server https://{{ k3s_api_loadbalancer_ip }}:6443"
      when: inventory_hostname in groups['node']
