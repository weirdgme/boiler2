---
- name: Install and configure containerd
  hosts: k3s_cluster
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Start containerd
      systemd:
        name: containerd
        state: started
        enabled: yes

    - name: Create /etc/containerd directory
      file:
        path: /etc/containerd
        state: directory

    - name: Remove existing config.toml
      file:
        path: /etc/containerd/config.toml
        state: absent

    - name: Generate containerd config.toml
      shell: "containerd config default | sudo tee /etc/containerd/config.toml"
      args:
        creates: /etc/containerd/config.toml

    - name: Set SystemdCgroup to true in config.toml
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Enable bridging in sysctl.conf
      replace:
        path: /etc/sysctl.conf
        regexp: '#net.ipv4.ip_forward=1'
        replace: 'net.ipv4.ip_forward=1'

    - name: Create /etc/modules-load.d/k8s.conf and add br_netfilter (bridge net filter(ensures bridging is fully supported))
      lineinfile:
        path: /etc/modules-load.d/k8s.conf
        line: 'br_netfilter'
        create: yes

    - name: Enable bridging in sysctl.conf
      replace:
        path: /etc/modules-load.d/k8s.conf
        regexp: '#net.ipv4.ip_forward=1'
        replace: 'net.ipv4.ip_forward=1'

    - name: Check if swap is enabled
      shell: "swapon --show"
      register: swap_status
      ignore_errors: true

    - name: Disable swap
      shell: "swapoff -a"
      when: swap_status.rc == 0

    - name: Comment swap line from /etc/fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^(.*swap.*)$'
        line: '#\1'
        backrefs: yes
      when: swap_status.rc == 0

    - name: Reboot the server
      reboot: